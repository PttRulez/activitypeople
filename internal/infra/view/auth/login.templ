package auth

import "github.com/pttrulez/activitypeople/internal/infra/view/layout"

templ LoginPage() {
	@layout.App(false) {
		<div class="flex justify-center mt-[calc(100vh-100vh+8rem)]">
			<div class="max-w-screen-sm w-full bg-base-300 py-10 px-16 rounded-xl">
				
				<h1 class="text-center text-primary text-3xl mb-10">
					Login
				</h1>

				@LoginForm(domain.LoginUserDto{}, nil)

			</div>
		</div>
	}
}

templ LoginForm(dto domain.LoginUserDto, errors map[string]string) {
	<form
		hx-post="/login"
		hx-swap="outerHTML"
		class="space-y-5"
	>
		<label class="form-control w-full">
		  <div class="label">
		    <span class="label-text">Email</span>
		  </div>
		  <input type="email" name="email" value={dto.Email} placeholder="type your email" 
				class="input input-bordered w-full"  autocomplete="off" required/>
			if message, ok := errors["Email"]; ok {
			  <div class="label">
			    <span class="label-text-alt text-error">{message}</span>
			  </div>
			}
		</label>

		<label class="form-control w-full">
		  <div class="label">
		    <span class="label-text">Password</span>
		  </div>
		  <input type="password" name="password" value={dto.Password} placeholder="type your password" 
				class="input input-bordered w-full" autocomplete="off" required/>
			if message, ok := errors["Password"]; ok {
			  <div class="label">
			    <span class="label-text-alt text-error">{message}</span>
			  </div>
			}
		</label>
		if message, ok := errors["Credentials"]; ok {
			  <div class="label">
			    <span class="label-text-alt text-error">{message}</span>
			  </div>
			}

		<button type="submit" class="btn btn-primary w-full">login <i class="fa-solid fa-arrow-right"></i></button>
		<div class="divider">OR</div>
		<a href="/login/provider/google" type="submit" class="btn btn-outline w-full">Log in with Google <i class="fa-brands fa-google"></i></a>
	</form>
}


templ ResetPasswordPage() {
	@layout.App(true) {
		<div class="max-w-2xl w-full mx-auto mt-8">
			<div>
				<h1 class="text-lg font-semibold border-b border-gray-700 pb-2">Reset Password</h1>
				<div class="py-6">
					@ResetPasswordForm(ResetPasswordErrors{})
				</div>
				
			</div>
		</div>
	}
}

type ResetPasswordParams struct {
	NewPassword string
}
type ResetPasswordErrors struct {
	NewPassword string
}

templ ResetPasswordInitiated(email string) {
	<div>A password reset link is being sent to <span class="text-info font-semibold">{ email }</span></div>
}

templ ResetPasswordForm(errors ResetPasswordErrors) {
	<form
		hx-put="/auth/reset-password"
		hx-swap="outerHTML"
	>
		<div class="text-lable mb-2">Enter new password</div>
		<input
			class="input input-bordered w-full mb-4"
			name="password"
			type="password"
		/>
		if len(errors.NewPassword) > 0 {
			<div class="text-sm text-error mt-1">{ errors.NewPassword }</div>
		}
		<button class="btn btn-primary">update password</button>
	</form>
}



templ CallbackScript() {
	<script>
		var url = window.location.href;
		var newURL = url.replace("#", "?")
		window.location = newURL
	</script>
}
